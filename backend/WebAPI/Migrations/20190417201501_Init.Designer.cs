// <auto-generated />
using backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace WebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190417201501_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("backend.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.HasKey("Id");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("backend.Models.Desk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsCoordinator");

                    b.Property<bool>("IsVolunteer");

                    b.Property<string>("LastName");

                    b.Property<string>("NumberDesk");

                    b.Property<string>("Team");

                    b.HasKey("Id");

                    b.ToTable("Desks");
                });

            modelBuilder.Entity("backend.Models.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FromWhere");

                    b.Property<DateTime>("endDate");

                    b.Property<string>("guestName");

                    b.Property<string>("guestSurname");

                    b.Property<string>("placeId");

                    b.Property<DateTime>("startDate");

                    b.HasKey("Id");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("backend.Models.Kitchen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsCoffee");

                    b.Property<bool>("IsWater");

                    b.Property<string>("Name");

                    b.Property<string>("Number");

                    b.HasKey("Id");

                    b.ToTable("Kitchens");
                });

            modelBuilder.Entity("backend.Models.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsCoordinator");

                    b.Property<bool>("IsVolunteer");

                    b.Property<string>("LastName");

                    b.Property<string>("NumberDesk");

                    b.Property<string>("Position");

                    b.Property<string>("Team");

                    b.HasKey("Id");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("backend.Models.Printer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsColor");

                    b.Property<string>("Number");

                    b.HasKey("Id");

                    b.ToTable("Printers");
                });

            modelBuilder.Entity("backend.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<bool>("IsBlackboard");

                    b.Property<bool>("IsPhone");

                    b.Property<bool>("IsTV");

                    b.Property<int>("NumberOfPeople");

                    b.Property<string>("roomName");

                    b.Property<string>("roomNumber");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
